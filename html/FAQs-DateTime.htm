<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" type="text/css" href="ph-help.css">
<title>DateTime data</title>
</head>
<body>
<div class=ph1>
FAQ: DateTime data </div>

<div class=ph2>Knowledge Notes </div>

<div class=ph3>
  Date/Time variables are stored internally as a string. <br>
  <br>
  See also the&nbsp; <A href="html\datetime_functions.htm">Date / Time Functions</A>                
&nbsp;section for detailed information concerning date / time input-output formats.<br>
<br>
The ph_getvar_XX   functions will take these strings and perform the proper data conversion (if possible).  This is generally safer and goes a long way into insuring you don’t get syntax errors from data types that dont match.  The [LOCALXX] form of a variable is a “search and replace” type of mechanism.  If you’re certain that the var contains the datatype that you’re interested in, you can use this form.</p>
  <p> Some examples to help make things clear...<br>   
    if [LOCAL1] contains 5 then...<br>
    &nbsp;&nbsp;[LOCAL1] + 8  &gt;&gt;  Returns a number type that equals 13<br>
    &nbsp;&nbsp;[LOCAL1] + “ is a number.” &gt;&gt; Returns a syntax error because the formula actually passed to the evaluator will look like: 5 + “ is a number.”<br>
&nbsp;&nbsp;“[LOCAL1]” + “ is a number.”  &gt;&gt; Returns a string that looks like: 5 is a number.<br>
&nbsp;&nbsp;“[LOCAL1] is a number.” &gt;&gt;  Also works and is the equivalent of the formula just above.</p>

  <p>    Using this background, if the [LOCAL3] var contains a saved datetime value in the form of 12/15/2010 10:49:00 it will fail in this formula:            	ph_minutesafter([LOCAL3],today()) </p>
  <p>    But...it will suceed if the saved datetime value in [LOCAL3] looks like: 2010-12-15 10:49:00, or the formula was changed to        	ph_minutesafter(ph_getvar_dt(1,3),today())</p>
  <p>    To create a negative time value (before an event) use this form . . .  “ph_relativetime ( 00:00:00,[SUNRISE]-15*60)“ which  would be 15 minutes before SUNRISE.</p>
  <p>You can specify a literal date, time, or datetime by using the format of "<strong>yyyy-mm-dd hh:mm:ss.ttt</strong>"&nbsp;&nbsp;That is with
    dashes, not slashes between date items and no comma between the date and time. &nbsp;&nbsp;<br>
    <br>
    &nbsp;&nbsp;&nbsp;[NOTE: the date is <strong>year</strong>-month-day ordered.] <br>
    <br>
    For  example the formula... &nbsp;<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ph_relativedatetime(2013-12-01 13:38:15.306,90)&nbsp;<br>
    <br>
    Will give you back a datetime that is 90 minutes later than the entered datetime... almost. The milliseconds portion will always be 0, as the ph_relativedatetime function truncates time to seconds. If you want millisecond precision, you must use the ph_relativedtprecise function.
	<br>
    <br>
  If you are wondering why the function today() returns its output in mm/dd/yyyy hh:mm:ss format rather than the literal datetime input, it is due to Windows formatting of datetime values which are controlled by regional settings. So input is always yyyy-mm-dd hh:mm:ss.fff and output can vary (usually mm/dd/yyyy hh:mm:ss in the United States) based upon Windows regional settings.&nbsp;</p>
  <p>To better understand how to create formulas with Date/Time &amp; System values the following chart demonstrates how various functions  resolve their output values...</p>

<table><!--DWLayoutTable-->
<tr class=ph20>  <td width="300">Formula</td> <td width=200>Result</td>  </tr>
<tr class=ph21>  <td>ph_secondsafter(06:30:00, 06:32:00)</td> <td>120</td>  </tr>
<tr class=ph22>  <td>[SUNRISE]</td> <td>22869</td>  </tr>
<tr class=ph21>  <td>ph_relativetime(00:00:00,[SUNRISE])</td> <td>06:25:26</td>  </tr>
<tr class=ph22>  <td>ph_relativetime(00:00:00,[SUNRISE]-60)</td> <td>06:24:26</td>  </tr>
<tr class=ph21>  <td>ph_relativetime(00:01:00,[SUNRISE])</td> <td>06:26:26</td>  </tr>
<tr class=ph22>  <td>ph_relativetime(02:00:00,90)</td> <td>02:01:30</td>  </tr>
<tr class=ph21>  <td>Now()</td> <td>14:57:22:463</td>  </tr>
<tr class=ph22>  <td>ph_relativetime(now(),30)</td> <td>14:57:52</td>  </tr>
<tr class=ph21>  <td>Today()</td> <td>12/01/2013 14:57:22</td></tr>
<tr class=ph22>  <td>ph_relativedatetime(today(),30)</td> <td>12/01/2013 14:57:52</td></tr>
<tr class=ph21>  <td>ph_relativedatetime(datetime("09/23/13 12:00:00"),30)</td> <td>09/23/2013 12:30:00</td></tr>
<tr class=ph22>  <td>ph_relativedatetime(2013-09-23 12:00:00,30) </td> <td>09/23/2013 12:30:00</td></tr>
<tr class=ph21>  <td>datetime("09-23-13 08:15:00")</td> <td>09/23/2013 08:15:00</td></tr>
<tr class=ph22>  <td>time("06:30:00")</td> <td>06:30:00 </td></tr>
<tr class=ph21>  <td>Now()&gt;07:00:00</td> <td>True if after 7AM</td> </tr>
<tr class=ph22><td>datetime(today(),08:00:00)</td> <td>12/01/2013 08:00:00  </td></tr>
</table>
<br>
<br>
</div>

</body>
</html>
